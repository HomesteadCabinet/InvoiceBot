# Generated by Django 5.2 on 2025-04-02 22:10

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('invoices', '0002_remove_vendor_email_processedemail_vendor_and_more'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='vendor',
            name='data_rules',
        ),
        migrations.AlterField(
            model_name='processedemail',
            name='data',
            field=models.JSONField(default=dict, help_text='Data extracted from the email'),
        ),
        migrations.CreateModel(
            name='DataRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_name', models.CharField(help_text='Name of the field to extract', max_length=255)),
                ('data_type', models.CharField(choices=[('text', 'Text'), ('number', 'Number'), ('date', 'Date'), ('currency', 'Currency'), ('email', 'Email'), ('phone', 'Phone')], max_length=50)),
                ('location_type', models.CharField(choices=[('coordinates', 'Coordinates'), ('keyword', 'Keyword'), ('regex', 'Regular Expression'), ('table', 'Table'), ('header', 'Header')], max_length=50)),
                ('coordinates', models.JSONField(blank=True, help_text="For coordinate-based extraction: {'x': float, 'y': float, 'width': float, 'height': float}", null=True)),
                ('keyword', models.CharField(blank=True, help_text='Keyword to search for', max_length=255, null=True)),
                ('regex_pattern', models.CharField(blank=True, help_text='Regular expression pattern', max_length=255, null=True)),
                ('table_config', models.JSONField(blank=True, help_text="For table-based extraction: {'row_index': int, 'col_index': int, 'header_text': str}", null=True)),
                ('required', models.BooleanField(default=True)),
                ('validation_regex', models.CharField(blank=True, help_text='Regex pattern for validation', max_length=255, null=True)),
                ('min_value', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('max_value', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('pre_processing', models.JSONField(blank=True, help_text="Pre-processing steps: {'remove_spaces': bool, 'to_uppercase': bool, etc.}", null=True)),
                ('post_processing', models.JSONField(blank=True, help_text="Post-processing steps: {'format_date': str, 'round_decimals': int, etc.}", null=True)),
                ('description', models.TextField(blank=True, help_text='Description of what this rule extracts')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_rules', to='invoices.vendor')),
            ],
            options={
                'unique_together': {('vendor', 'field_name')},
            },
        ),
    ]
